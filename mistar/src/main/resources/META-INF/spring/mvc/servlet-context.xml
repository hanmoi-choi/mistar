<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing
		infrastructure -->

	<context:component-scan base-package="com.apollo.mistar" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="com.apollo.mistar.support.AtmosphereArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Imports user-defined @Controller beans that process client requests -->
<!-- 	<beans:import resource="controllers.xml" />
 -->

 	<bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json" />
		<property name="objectMapper" ref="jaxbJacksonObjectMapper" />
     </bean>

    <bean id="jaxbJacksonObjectMapper" class="com.apollo.mistar.support.JaxbJacksonObjectMapper" />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
    <!--<bean class = "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />-->

    <!--&lt;!&ndash; Selects a static view for rendering without the need for an explicit controller &ndash;&gt;-->
    <!--<mvc:view-controller path="/uncaughtException"/>-->
    <!--<mvc:view-controller path="/resourceNotFound"/>-->
    <!--<mvc:view-controller path="/dataAccessFailure"/>-->

    <!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource
    requests to the container's default Servlet -->
    <!--<mvc:default-servlet-handler/>-->

    <!--&lt;!&ndash; Resolves view names to protected .jsp resources within the /WEB-INF/views directory &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/WEB-INF/views/"/>-->
        <!--<property name="suffix" value=".jsp"/>-->
    <!--</bean>-->

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <mvc:resources mapping="/resources/**" location="/js-libs/extjs/resources/" />
    <mvc:resources mapping="/client-js/**" location="/client-js/" />
    <mvc:resources mapping="/public-resources/**" location="/public-resources/" />
    <mvc:resources mapping="/js-libs/**" location="/js-libs/" />

    <!-- Forwards requests to the "/" resource to the "welcome" view -->
    <mvc:view-controller path="/" view-name="welcome"/>

    <!-- Enable this for integration of file upload functionality -->
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver"/>

    <task:executor id="executor" pool-size="5"/>
    <task:scheduler id="scheduler" pool-size="5"/>
    <task:annotation-driven scheduler="scheduler" executor="executor"/>

</beans>
