<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.1.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <!-- The controllers are autodetected POJOs labeled with the @Controller annotation. -->
    <context:component-scan base-package="com.apollo.mistar" use-default-filters="false">
        <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
    </context:component-scan>

    <!-- Turns on support for mapping requests to Spring MVC @Controller methods
         Also registers default Formatters and Validators for use across all @Controllers -->
    <mvc:annotation-driven/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
    <!--<bean class = "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />-->

    <!--&lt;!&ndash; Selects a static view for rendering without the need for an explicit controller &ndash;&gt;-->
    <!--<mvc:view-controller path="/uncaughtException"/>-->
    <!--<mvc:view-controller path="/resourceNotFound"/>-->
    <!--<mvc:view-controller path="/dataAccessFailure"/>-->

    <!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource
    requests to the container's default Servlet -->
    <!--<mvc:default-servlet-handler/>-->

    <!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <mvc:resources mapping="/resources/**" location="/js-libs/extjs/resources/" />
    <mvc:resources mapping="/client-js/**" location="/client-js/" />
    <mvc:resources mapping="/public-resources/**" location="/public-resources/" />
    <mvc:resources mapping="/js-libs/**" location="/js-libs/" />

    <!-- Forwards requests to the "/" resource to the "welcome" view -->
    <!--<mvc:view-controller path="/" view-name="welcome"/>-->

    <!-- Enable this for integration of file upload functionality -->
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver"/>
</beans>
